# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk
# netaddr

- import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the bootstrap server port'
    os_port:
      name: "{{ os_port_bootstrap }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_master }}"
      allowed_address_pairs:
      - ip_address: "{{ os_apiVIP }}"

  - name: 'Set bootstrap port tag'
    command:
      cmd: "openstack port set --tag {{ cluster_id_tag }} {{ os_port_bootstrap }}"

  - name: 'Set bootstrap auto_ip to false'
    ansible.builtin.set_fact:
      bootstrap_auto_ip: false
    when: os_bootstrap_fip is not defined

  - name: 'Create the ACI containers bootstrap server port'
    os_port:
      name: "{{ os_aci_containers_port_bootstrap }}"
      network: "{{ os_aci_containers_network }}"
    when: os_networking_type == "CiscoACI"

  - name: 'Set ACI containers bootstrap port tag'
    command:
      cmd: "openstack port set --tag {{ cluster_id_tag }} {{ os_aci_containers_port_bootstrap }}"
    when: os_networking_type == "CiscoACI"

  - name: 'Create the bootstrap server'
    os_server:
      name: "{{ os_bootstrap_server_name }}"
      image: "{{ os_image_rhcos }}"
      flavor: "{{ os_flavor_master }}"
      userdata: "{{ lookup('file', os_bootstrap_ignition) | string }}"
      auto_ip: no
      nics:
      - port-name: "{{ os_port_bootstrap }}"
    when: os_networking_type != "CiscoACI"

  - name: 'Create the bootstrap server'
    os_server:
      name: "{{ os_bootstrap_server_name }}"
      image: "{{ os_image_rhcos }}"
      flavor: "{{ os_flavor_master }}"
      userdata: "{{ lookup('file', os_bootstrap_ignition) | string }}"
      floating_ips: "{{ os_bootstrap_fip | default(omit) }}"
      auto_ip: "{{ bootstrap_auto_ip | default(omit) }}"
      nics:
      - port-name: "{{ os_port_bootstrap }}"
      - port-name: "{{ os_aci_containers_port_bootstrap }}"
    when: os_networking_type == "CiscoACI"

  - name: 'Create the bootstrap floating IP'
    os_floating_ip:
      state: present
      nat_destination: "{{ os_network }}"
      network: "{{ os_external_network }}"
      server: "{{ os_bootstrap_server_name }}"
