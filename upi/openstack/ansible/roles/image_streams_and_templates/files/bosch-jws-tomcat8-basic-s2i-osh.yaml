apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: redacted-jws-tomcat8-basic-s2i-redacted
message: A new JWS application for Apache Tomcat 8 has been created in your project.
  The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
metadata:
  annotations:
    description: This is a Tomcat 8 builder image template using S2I offered by CI/redacted1.
      For more information about using this template, see https://github.com/jboss-openshift/application-templates.
    iconClass: icon-rh-tomcat
    openshift.io/display-name: redacted redacted JWS based Tomcat 8
    openshift.io/provider-display-name: Robert redacted GmbH
    tags: tomcat,tomcat8,java,jboss
    template.openshift.io/bindable: "false"
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-web-server/
    template.openshift.io/long-description: This template defines resources needed
      to develop Red Hat JBoss Web Server Apache Tomcat 8 based application, including
      a build configuration, and an application deployment configuration.
      This template had been derived from RedHat's jws31-tomcat8-basic-s2i template
      adding redacted specific enrichments like limits, context root, git source secret 
      and shutdown password
    template.openshift.io/support-url: https://access.redhat.com
    version: "1.0"
  labels:
    samples.operator.openshift.io/managed: "false"
  name: redacted-jws-tomcat8-basic-s2i-redacted
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's http and https service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    path: ${APP_CONTEXTROOT}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      sourceSecret:
        name: ${SOURCE_SECRET}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: ${IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JWS_ADMIN_USERNAME
            value: ${JWS_ADMIN_USERNAME}
          - name: JWS_ADMIN_PASSWORD
            value: ${JWS_ADMIN_PASSWORD}
          - name: JAVA_MAX_MEM_RATIO
            value: ${JAVA_MAX_MEM_RATIO}
          - name: JAVA_INITIAL_MEM_RATIO
            value: ${JAVA_INITIAL_MEM_RATIO}
          - name: GC_MAX_METASPACE_SIZE
            value: ${GC_MAX_METASPACE_SIZE}
          - name: TOMCAT_SHUTDOWN
            value: ${TOMCAT_SHUTDOWN}
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}           
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl --noproxy '*' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD}
                'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                |grep -iq 'stateName *= *STARTED'
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: No other possibilities so far
  displayName: ImageStream Name
  name: IMAGE_STREAM_NAME
  required: true
  value: redacted-webserver31-tomcat8-openshift
- description: Another possibility could be quality or latest or 1.4
  displayName: ImageStream Tag
  name: IMAGE_STREAM_TAG
  required: true
  value: production
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: myjavaapp
- description: Context root of the application, means the /path behind the server name in the URL
  displayName: Context root of the application
  name: APP_CONTEXTROOT
  required: true
  value: /myjavaapp
- description: Git source URI for application
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/jboss-openshift/openshift-quickstarts.git
- description: Git branch/tag reference
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  value: "1.2"
- description: Path within Git project to build; empty for root project directory.
  displayName: Git Context Directory
  name: CONTEXT_DIR
  value: tomcat-websocket-chat
- description: Git Source Secret - Please keep this value for public Git repos. For private Git repos, please create new secret in the project before referencing it here. 
  displayName: Git Source Secret
  name: SOURCE_SECRET
  value: dummysecret
  required: true
- description: Tomcat Admin User - if empty it will be generated
  displayName: Tomcat Admin Username
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JWS_ADMIN_USERNAME
  required: true
- description: Tomcat Admin Password - if empty it will be generated
  displayName: Tomcat Admin Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JWS_ADMIN_PASSWORD
  required: true
- description: Tomcat Shutdown Password - if empty it will be generated
  displayName: Tomcat Shutdown Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: TOMCAT_SHUTDOWN
  required: true
- description: GitHub trigger secret - if empty it will be generated
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret - if empty it will be generated
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: Maven mirror to use for S2I builds
  displayName: Maven mirror URL
  name: MAVEN_MIRROR_URL
- description: List of directories from which archives will be copied into the deployment
    folder. If unspecified, all archives in /target will be copied.
  name: ARTIFACT_DIR
- description: The minimum amount of CPU the container is guaranteed [in millicores]
  name: CPU_REQUEST
  value: 50m
- description: The maximum amount of CPU the container is allowed to use when running [in millicores]
  name: CPU_LIMIT
  value: 100m
- description: The minimum amount of memory the container is guaranteed [in megabytes]
  name: MEMORY_REQUEST
  value: 128Mi
- description: The maximum amount of memory the container is allowed to use when running [in megabytes]
  name: MEMORY_LIMIT
  value: 256Mi
- description: Percentage value, which describes how much of the container's MEMORY_LIMIT is allocated max to the JVM (-Xmx) 
  name: JAVA_MAX_MEM_RATIO
  value: "80"
- description: Percentage value, which describes how much of the max allocated JVM memory (-Xmx) is used as min JVM memory (-Xms)
  name: JAVA_INITIAL_MEM_RATIO
  value: "50"
- description: Size of JVM meta space [in megabytes]
  name: GC_MAX_METASPACE_SIZE
  value: "100"
