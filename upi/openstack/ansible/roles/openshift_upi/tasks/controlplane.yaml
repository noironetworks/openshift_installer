- import_tasks: common.yaml

- name: 'Create the Control Plane ports'
  os_port:
    name: "{{ item.1 }}-{{ item.0 }}"
    network: "{{ os_network }}"
    security_groups:
    - "{{ os_sg_master }}"
    allowed_address_pairs:
    - ip_address: "{{ os_subnet_range | next_nth_usable(5) }}"
    - ip_address: "{{ os_subnet_range | next_nth_usable(6) }}"
    - ip_address: "{{ os_subnet_range | next_nth_usable(7) }}"

  with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"
  register: ports

- name: 'Set Control Plane ports tag'
  command:
    cmd: "openstack port set --tag {{ cluster_id_tag }} {{ item.1 }}-{{ item.0 }}"
  with_indexed_items: "{{ [os_port_master] * os_cp_nodes_number }}"

- name: 'List the Control Plane Trunks'
  command:
    cmd: "openstack network trunk list"
  when: os_networking_type == "Kuryr"
  register: control_plane_trunks

- name: 'Create the Control Plane trunks'
  command:
    cmd: "openstack network trunk create --parent-port {{ item.1.id }} {{ os_cp_trunk_name }}-{{ item.0 }}"
  with_indexed_items: "{{ ports.results }}"
  when:
  - os_networking_type == "Kuryr"
  - "os_cp_trunk_name|string not in control_plane_trunks.stdout"

- name: fetch masters ignition files
  slurp:
    src: "{{ ansible_user_dir }}/openshift-{{ clustername }}/{{ item.1 }}-{{ item.0 }}-ignition.json"
  register: masters_ignition_slurp
  with_indexed_items: "{{ [os_cp_server_name] * os_cp_nodes_number }}"
  
- name: 'Create the Control Plane servers'
  os_server:
    name: "{{ item.1 }}-{{ item.0 }}"
    image: "{{ os_image_rhcos }}"
    flavor: "{{ os_flavor_master }}"
    auto_ip: no
    # The ignition filename will be concatenated with the Control Plane node
    # name and its 0-indexed serial number.
    # In this case, the first node will look for this filename:
    #    "{{ infraID }}-master-0-ignition.json"
    userdata: "{{ masters_ignition_slurp.results[item.0]['content'] | b64decode | string }}"
    #    boot_from_volume: True
    #terminate_volume: True
    #volume_size: "{{ openshift.cluster.masterrootvolumesize }}"
    nics:
    - port-name: "{{ os_port_master }}-{{ item.0 }}"
  with_indexed_items: "{{ [os_cp_server_name] * os_cp_nodes_number }}"
